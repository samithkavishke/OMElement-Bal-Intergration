/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id 'java'
//    id 'com.github.spotbugs'
//    id 'checkstyle'
}

description = 'Ballerina - OMElement Intergration Java Native'


dependencies {
     testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'junit:junit:4.13.1'
    implementation 'org.apache.commons:commons-lang3:3.6'

    implementation group: 'org.ballerinalang', name: 'ballerina-lang', version: "2201.8.3"
    implementation group: 'org.ballerinalang', name: 'ballerina-runtime', version: "2201.8.3"
    implementation group: 'org.apache.ws.commons.axiom', name: 'axiom', version: '1.2.12'
    implementation group: 'org.apache.ws.commons.axiom', name: 'axiom-api', version: '1.2.14'
    implementation group: 'org.apache.synapse', name: 'synapse-core', version: '2.0.0'
    implementation group: 'org.apache.synapse', name: 'synapse-securevault', version: "2.0.0"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = JavaVersion.VERSION_17

//test {
//    useTestNG() {
//        suites 'src/test/resources/testng.xml'
//    }
//    testLogging.showStandardStreams = true
//    testLogging {
//        events "PASSED", "FAILED", "SKIPPED"
//        afterSuite { desc, result ->
//            if (!desc.parent) { // will match the outermost suite
//                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
//                def startItem = '|  ', endItem = '  |'
//                def repeatLength = startItem.length() + output.length() + endItem.length()
//                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
//            }
//        }
//    }
////    finalizedBy jacocoTestReport
//}


//spotbugsMain {
//    enabled = flase
//    effort = "max"
//    reportLevel = "low"
//    reportsDir = file("$project.buildDir/reports/spotbugs")
//    def excludeFile = file("${rootDir}/build-config/spotbugs-exclude.xml")
//    if (excludeFile.exists()) {
//        it.excludeFilter = excludeFile
//    }
//    reports {
//        text.enabled = true
//    }
//}

//checkstyle {
//    toolVersion "${checkstyleToolVersion}"
//    configFile file("${rootDir}/build-config/checkstyle/build/checkstyle.xml")
//    configProperties = ["suppressionFile": file("${rootDir}/build-config/checkstyle/build/suppressions.xml")]
//}
//
//checkstyleMain.dependsOn(':checkstyle:downloadCheckstyleRuleFiles')

//tasks.withType(Checkstyle) {
//    exclude '**/module-info.java'
//}

//spotbugsTest {
//    enabled = false
//}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
